// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.2
// source: bacter.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *OpRes) Reset() {
	*x = OpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bacter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpRes) ProtoMessage() {}

func (x *OpRes) ProtoReflect() protoreflect.Message {
	mi := &file_bacter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpRes.ProtoReflect.Descriptor instead.
func (*OpRes) Descriptor() ([]byte, []int) {
	return file_bacter_proto_rawDescGZIP(), []int{0}
}

func (x *OpRes) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type IterationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iter       uint32                    `protobuf:"varint,1,opt,name=iter,proto3" json:"iter,omitempty"`
	CellHeight uint32                    `protobuf:"varint,2,opt,name=cellHeight,proto3" json:"cellHeight,omitempty"`
	CellWidth  uint32                    `protobuf:"varint,3,opt,name=cellWidth,proto3" json:"cellWidth,omitempty"`
	CellsData  []*IterationData_CellData `protobuf:"bytes,4,rep,name=cellsData,proto3" json:"cellsData,omitempty"`
}

func (x *IterationData) Reset() {
	*x = IterationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bacter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterationData) ProtoMessage() {}

func (x *IterationData) ProtoReflect() protoreflect.Message {
	mi := &file_bacter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterationData.ProtoReflect.Descriptor instead.
func (*IterationData) Descriptor() ([]byte, []int) {
	return file_bacter_proto_rawDescGZIP(), []int{1}
}

func (x *IterationData) GetIter() uint32 {
	if x != nil {
		return x.Iter
	}
	return 0
}

func (x *IterationData) GetCellHeight() uint32 {
	if x != nil {
		return x.CellHeight
	}
	return 0
}

func (x *IterationData) GetCellWidth() uint32 {
	if x != nil {
		return x.CellWidth
	}
	return 0
}

func (x *IterationData) GetCellsData() []*IterationData_CellData {
	if x != nil {
		return x.CellsData
	}
	return nil
}

type IterationData_CellData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBact   uint32                               `protobuf:"varint,1,opt,name=totalBact,proto3" json:"totalBact,omitempty"`
	BactersData []*IterationData_CellData_BacterData `protobuf:"bytes,2,rep,name=bactersData,proto3" json:"bactersData,omitempty"`
}

func (x *IterationData_CellData) Reset() {
	*x = IterationData_CellData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bacter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterationData_CellData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterationData_CellData) ProtoMessage() {}

func (x *IterationData_CellData) ProtoReflect() protoreflect.Message {
	mi := &file_bacter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterationData_CellData.ProtoReflect.Descriptor instead.
func (*IterationData_CellData) Descriptor() ([]byte, []int) {
	return file_bacter_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IterationData_CellData) GetTotalBact() uint32 {
	if x != nil {
		return x.TotalBact
	}
	return 0
}

func (x *IterationData_CellData) GetBactersData() []*IterationData_CellData_BacterData {
	if x != nil {
		return x.BactersData
	}
	return nil
}

type IterationData_CellData_BacterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size  float32 `protobuf:"fixed32,1,opt,name=size,proto3" json:"size,omitempty"`
	Speed float32 `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Diet  float32 `protobuf:"fixed32,3,opt,name=diet,proto3" json:"diet,omitempty"`
	Hash  uint64  `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *IterationData_CellData_BacterData) Reset() {
	*x = IterationData_CellData_BacterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bacter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterationData_CellData_BacterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterationData_CellData_BacterData) ProtoMessage() {}

func (x *IterationData_CellData_BacterData) ProtoReflect() protoreflect.Message {
	mi := &file_bacter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterationData_CellData_BacterData.ProtoReflect.Descriptor instead.
func (*IterationData_CellData_BacterData) Descriptor() ([]byte, []int) {
	return file_bacter_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *IterationData_CellData_BacterData) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IterationData_CellData_BacterData) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *IterationData_CellData_BacterData) GetDiet() float32 {
	if x != nil {
		return x.Diet
	}
	return 0
}

func (x *IterationData_CellData_BacterData) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

var File_bacter_proto protoreflect.FileDescriptor

var file_bacter_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x05, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65,
	0x6c, 0x6c, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x65, 0x6c, 0x6c, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65,
	0x6c, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x65, 0x6c, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd5, 0x01, 0x0a, 0x08, 0x43, 0x65, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x63,
	0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x5e,
	0x0a, 0x0a, 0x42, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x64, 0x69, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x32, 0xaa,
	0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e,
	0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d,
	0x2e, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x62, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bacter_proto_rawDescOnce sync.Once
	file_bacter_proto_rawDescData = file_bacter_proto_rawDesc
)

func file_bacter_proto_rawDescGZIP() []byte {
	file_bacter_proto_rawDescOnce.Do(func() {
		file_bacter_proto_rawDescData = protoimpl.X.CompressGZIP(file_bacter_proto_rawDescData)
	})
	return file_bacter_proto_rawDescData
}

var file_bacter_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_bacter_proto_goTypes = []interface{}{
	(*OpRes)(nil),                             // 0: bacter.OpRes
	(*IterationData)(nil),                     // 1: bacter.IterationData
	(*IterationData_CellData)(nil),            // 2: bacter.IterationData.CellData
	(*IterationData_CellData_BacterData)(nil), // 3: bacter.IterationData.CellData.BacterData
	(*emptypb.Empty)(nil),                     // 4: google.protobuf.Empty
}
var file_bacter_proto_depIdxs = []int32{
	2, // 0: bacter.IterationData.cellsData:type_name -> bacter.IterationData.CellData
	3, // 1: bacter.IterationData.CellData.bactersData:type_name -> bacter.IterationData.CellData.BacterData
	4, // 2: bacter.Processor.Start:input_type -> google.protobuf.Empty
	4, // 3: bacter.Processor.Stop:input_type -> google.protobuf.Empty
	4, // 4: bacter.Processor.GetData:input_type -> google.protobuf.Empty
	0, // 5: bacter.Processor.Start:output_type -> bacter.OpRes
	0, // 6: bacter.Processor.Stop:output_type -> bacter.OpRes
	1, // 7: bacter.Processor.GetData:output_type -> bacter.IterationData
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bacter_proto_init() }
func file_bacter_proto_init() {
	if File_bacter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bacter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bacter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bacter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterationData_CellData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bacter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterationData_CellData_BacterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bacter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bacter_proto_goTypes,
		DependencyIndexes: file_bacter_proto_depIdxs,
		MessageInfos:      file_bacter_proto_msgTypes,
	}.Build()
	File_bacter_proto = out.File
	file_bacter_proto_rawDesc = nil
	file_bacter_proto_goTypes = nil
	file_bacter_proto_depIdxs = nil
}
